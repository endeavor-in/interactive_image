<?php

/**
 * @file 
 * Install and uninstall functions for the interactive image module.
 */

/**
 * Implements hook_install().
 */

function interactive_image_install() {
	
	// create an interactive image style
	$hotspot_image_style = array('name' => 'hotspot_image');
  $hotspot_image_style = image_style_save($hotspot_image_style);
  variable_set('hot_spot_image_style', $hotspot_image_style);
  
  // define the effect and widht,height 
	$hotspot_image_effect = image_effect_definition_load('image_scale');
	$hotspot_image_effect['data'] = array('width' => 20, 'height' => 20, 'upscale' => 0);
	
	//make a relation ship = style and effect  
	$hotspot_image_effect['isid'] = $hotspot_image_style['isid'];
	
	//create a effect for style
	image_effect_save($hotspot_image_effect);
	
	$node_options = array('0' => 'status');
	
	$interactive_image = array(
		'type' => 'interactive_image',
		'name' => st('Interactive Image'),
		'base' => 'node_content',
		'description' => st('Interactive Image is used to create multiple hot spot on a single image'),
		'custom' => TRUE,
		'modified' => TRUE			
	);
	
	//promote-to-front-page and sticky-at-top-of-lists  options are remove interactive_image content-type
	variable_set('node_options_interactive_image',	$node_options);
	variable_set('comment_interactive_image',1);
	//convert array to node type
	$interactive_image = node_type_set_defaults($interactive_image);
	//create interactive_image content-type
	node_type_save($interactive_image);
	
	
	$field_interactive_image = array(
		'field_name' => 'field_interactive_image', 
	  'type' => 'image'
	);

	$field_hotspot_image = array(
		'field_name' => 'field_hotspot_icon', 
  	'type' =>'image'
	);
	

	$field_hotspot_label = array(
		'field_name' => 'field_hotspot_label',
		'type' => 'list_text',
		'settings' => array(
  		'allowed_values' => array(
  			'use_title' => 'Use Title',
  			'use_legends' => 'Use Legends',
				'none'	=> 'None'
  		),
  		'allowed_values_function' => ''
  	)
	);

	//create field for interactive_image content-type
	field_create_field($field_interactive_image);
	field_create_field($field_hotspot_image);
	field_create_field($field_hotspot_label);
	
	$instance_interactive_image = array(
  	'label' => 'Interactive Image',
  	'field_name' => 'field_interactive_image', 
		'entity_type' => 'node',
		'bundle' => 'interactive_image',
		'required' => TRUE,
	); 
 	

	$instance_hotspot_image = array(
  	'label' => 'Hotspot Icon',
  	'field_name' => 'field_hotspot_icon', 
		'entity_type' => 'node',
		'bundle' => 'interactive_image',
		'display' => array(
  		'default' => array(
  			'label' => 'hidden',
  			'type' => 'hidden',
		  )  		
  	),
  	'description' => st('This will be displayed as a 20x20 icon. Uploading a square image will ensure that it is not cropped to size')  	
  ); 
  
  $instance_hotspot_label = array(
  	'label' => 'Hotspot Label',
  	'field_name' => 'field_hotspot_label',
  	'entity_type' => 'node',
  	'bundle' => 'interactive_image',
  	'required' => TRUE,
  	'widget' => array(
  		'type' => 'options_buttons',  
  		'weight' => -3		
  	),
  	'display' => array(
  		'default' => array(
  			'label' => 'hidden',
  			'type' => 'hidden',
  		)
  	),
  	'default_value' => array(
  		'0' => array(
  			'value' => 'none'	
  		)
  	)
  );

  //bind the field to interactive_image content-type
 	field_create_instance($instance_interactive_image); 
 	field_create_instance($instance_hotspot_image);
 	field_create_instance($instance_hotspot_label);
 	
	
	$hotspot = array(
		'type' => 'hotspot',
		'name' => st('Hotspot'),
		'base' => 'node_content',
		'description' => st('Hotspot is used to create multiple hot spot on a single image'),
		'custom' => TRUE,
		'modified' => TRUE,
		'locked' => FALSE,
	);
	
	//promote-to-front-page and sticky-at-top-of-lists  options are remove Hotspot content-type
	variable_set('node_options_hotspot',	$node_options);
	variable_set('comment_hotspot',1);
	//convert array to node type
	$hotspot = node_type_set_defaults($hotspot);
	//create Hotspot content-type
	node_type_save($hotspot);

	$field_coordinates = array(
		'field_name' => 'field_coordinates', 
	  	'type' =>'text'
	);

	$field_description = array(
		'field_name' => 'field_description', 
	 	'type' =>'text_long',
	);

	$field_parent_nid = array(
		'field_name' => 'field_parent_nid', 
	 	'type' => 'number_integer'	  
	);

	//create fields in hotspot content-type
	field_create_field($field_coordinates);
	field_create_field($field_description);
	field_create_field($field_parent_nid);

	$instance_coordinates = array(
  	'label' => 'Co-ordiantes',
  	'field_name' => 'field_coordinates', 
		'entity_type'=>'node',
		'bundle'=>'hotspot',
	);
  
	$instance_description = array(
	  'label' => 'Description',
	  'field_name' => 'field_description', 
		'entity_type'=>'node',
		'bundle'=>'hotspot',
	  	'settings' => array(
  			'text_processing' => 1
  		),
  		'display' => array(
  			'default' => array(
  				'label' => 'hidden'
  			)
  		)
	);
  
	$instance_parent_node = array(
	 'label' => 'Parent Node',
	 'field_name' => 'field_parent_nid',
	 'entity_type'=>'node',
		'bundle'=>'hotspot',  
  );

	//bind the field to hotspot content-type
	field_create_instance($instance_coordinates);
	field_create_instance($instance_description);
	field_create_instance($instance_parent_node);
}

/**
 * Implements hook_uninstall().
 */
  

function interactive_image_uninstall() {
	
	//delete hotspot_image_style
	$hotspot_image_style = variable_get('hot_spot_image_style');
  image_style_delete($hotspot_image_style,'');
	
	//delete interactive_image fields
	$query = new EntityFieldQuery();
	$result_interactive_image = $query
  					->entityCondition('entity_type',	'node')
  					->propertyCondition('type',	'interactive_image')
  					->execute();

	if ($result_interactive_image)
  {
  	$nids = array_keys($result_interactive_image['node']);
  	node_delete_multiple($nids);
	}
  
	//delete hotspot field
	$query_hotspot 	= new EntityFieldQuery();
  $result_hotspot = $query_hotspot
  					->entityCondition('entity_type',	'node')
  					->propertyCondition('type',	'hotspot')
  					->execute();
	if ($result_hotspot)
	{
	 	$nids_hotspot = array_keys($result_hotspot['node']);
	 	node_delete_multiple($nids_hotspot);
	}

	//delete interactive_image and hotspot content-types
	node_type_delete('interactive_image');
	node_type_delete('hotspot');
	
	//delete the node_options variable
	variable_del('node_options_interactive_image');
	variable_del('node_options_hotspot');
	variable_del('comment_interactive_image');
	variable_del('comment_hotspot');
	variable_del('interactive_image_cluetip_settings');
  variable_del('interactive_image_visible_width');
  
}

